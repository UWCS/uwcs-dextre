@use "sass:math";

$event-bar-spacing: 1.25rem !default;
$event-shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;

.head_block {
  background-image: url("/static/img/background.svg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  > .head_inner {
    background-color: rgba(10, 10, 10, 0.7);
  }

}

$social-background: rgba(0, 0, 0, .15) !default;
$social-outer: 5rem;
// Calculate the maximum size for a square emoji without breaking the box.
$social-inner: math.sqrt(($social-outer/2rem)*($social-outer/2rem))*1rem;
$social-outer-small: 3rem;
$social-inner-small: math.sqrt(($social-outer-small/2rem)*($social-outer-small/2rem))*1rem;
.social-circle {
  background: $social-background;
  width: $social-outer;
  height: $social-outer;
  border-radius: $social-outer;
  flex-shrink: 0;
  display: block;
  text-align: center;
  line-height: $social-outer;
  font-size: $social-inner;
  margin-left: auto;
  margin-right: auto;
  @include mobile {
    width: $social-outer-small;
    height: $social-outer-small;
    border-radius: $social-outer-small;
    line-height: $social-outer-small;
    font-size: $social-inner-small;
  }
}

.social-text {
  padding-top: 0.5rem;
  @include mobile {
    padding-top: 0.25rem;
  }
}

.column > .is-narrow-ish {
  flex-grow: 0;
}

.sponsor-image {
  display: block;
  margin-left: auto;
  margin-right: auto;

  > img {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}

.title, .subtitle {
  color: inherit; //Nowhere do we actually want different coloured titles
}

.icon-line {
  display: flex;
  flex-wrap: nowrap;
}


.icon-lead {
  flex-grow: 0;
  flex-shrink: 0;
  align-self: center;
  justify-self: center;
  text-align: center;
  margin-right: 0.5em;
}

.icon-text {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: auto;
}

.events-bar {
  display: grid;
  grid-gap: 1em;

  &.has-3 {
    grid-template-columns: 1fr 1fr 1fr;
  }

  &.has-2 {
    grid-template-columns: 1fr 1fr;
  }

  &.has-1 {
    grid-template-columns: 1fr;
  }

  @include mobile {
    &.has-1, &.has-2, &.has-3 {
      grid-template-columns: 1fr;
    }
    .event-2, .event-3 {
      display: none;
    }
  }
  @include tablet-only {
    &.has-2, &.has-3 {
      grid-template-columns: 1fr 1fr;
    }
    &.has-1 {
      grid-template-columns: 1fr;
    }
    .event-3 {
      display: none;
    }
  }
  place-items: stretch;
  margin-bottom: $event-bar-spacing;
}

.event {
  display: flex;
  flex-wrap: nowrap;
  height: available;
  box-shadow: $event-shadow;

  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    &.is-#{$name} {
      background-color: $color;
      color: $color-invert;
      // If light and dark colors are provided
      @if length($pair) >= 4 {
        $color-light: nth($pair, 3);
        $color-dark: nth($pair, 4);
        &.is-light {
          background-color: $color-light;
          color: $color-dark;
        }
      }
    }
  }

  > .event-image {
    flex-grow: 0;
    flex-shrink: 1;
    width: 100px;
    object-fit: cover;
  }

  > .event-content {
    padding: 1em;
    flex: 1 0;
  }
}

a.event:hover {
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    &.is-#{$name} {
      background-color: bulmaDarken($color, 2.5%);
      // If light and dark colors are provided
      @if length($pair) >= 4 {
        $color-light: nth($pair, 3);
        $color-dark: nth($pair, 4);
        &.is-light {
          background-color: bulmaDarken($color-light, 2.5%);
        }
      }
    }
  }
}

.columns.is-reversed {
  flex-direction: row-reverse;
}

.footer-links {
  list-style: none;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex-basis: content;
  justify-content: flex-end;
  align-content: center;
  @include mobile {
    justify-content: center;
  }
}

.footer-link {
  padding: .1em 0 .1em 1em;
  @include mobile {
    padding: .1em .5em .1em .5em;
  }

  > a {
    color: $white;

    &:hover {
      color: $grey;
    }
  }
}

.social-links {
  list-style: none;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex-basis: content;
  justify-content: start;
  align-content: center;
  @include mobile {
    justify-content: center;
  }
}

.social-link {
  > a {
    color: $white;

    &:hover {
      color: $grey;
    }
  }

  padding: .1em 0.5em .1em 0;

  @include tablet {
    font-size: 2em;
  }
  @include mobile {
    font-size: 1.5em;
    padding: .1em .5em .1em .5em;
  }
}

.switch-wrapper {
  display: flex;
  flex-direction: column;
  align-items: left;
  justify-items: center;
  @include mobile {
    align-items: center;
  }
}

.credits {
  color: $grey-light;

  a {
    color: $white;

    &:hover {
      color: $grey;
    }
  }
}

h1, h2, h3, h4, h5, h6 {
  .h-link {
    visibility: hidden;
  }

  &:hover {
    .h-link {
      visibility: visible;
    }
  }
}

body {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

.page-content {
  flex: 1;
}

.menu-label {
  text-transform: capitalize;
  font-weight: 700;
  font-family: $header-font-family;
}

.bs-callout {
  margin: 20px 0;
  padding: 15px 30px 15px 15px;
  border-left: 5px solid #eee;
}
.bs-callout h4 {
  margin-top: 0;
}
.bs-callout p:last-child {
  margin-bottom: 0;
}
.bs-callout code,
.bs-callout .highlight {
  background-color: #fff;
}

.bs-callout-danger {
  background-color: #fcf2f2;
  border-color: #dFb5b4;
}
.bs-callout-warning {
  background-color: #fefbed;
  border-color: #f1e7bc;
}
.bs-callout-info {
  background-color: #f0f7fd;
  border-color: #d0e3f0;
}

.code-block {
  margin-bottom: 1em;
}

.hero {
  &.has-background {
    position: relative;
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    object-fit: cover;
    object-position: center center;
    width: 100%;
    height: 100%;

    &.is-transparent {
      opacity: 0.3;
    }

    &.is-transparent-less {
      opacity: 0.5;
    }
  }
}

.is-dark-trans {
  background: rgba($grey-darker, 0.4);
  border-color: transparent;
  color: #fff;
}

.collapsible:hover {
	background-color: #f1f2e9;
}

.collapsible:after {
	content: '+';
	font-style: normal;
	font-size: 16px;
	float: right;
	margin-left: 5px;
}

button.collapsible {
	color: $primary;
	background: none;
	border: none;
	border-left: 1px solid $primary;
	border-spacing: 10px 0px;
	padding-left: 10px;
	margin-left: -10px;
	font-size: 16px;
	width: 100%;
	text-align: left;
}

.ccontent {
	border-left: 1px solid $primary;
	border-spacing: 10px 0px;
	padding-left: 10px;
	margin-left: -10px;
	overflow: hidden;
	display: none;
	transition: max-height 0.2s ease-out;
}

.linenos {
    margin-right: 1rem;
    user-select: none;
}